import React, { useState } from "react";
import {
  createCategories,
  deleteCategories,
  getCategories,
  updateCategories,
} from "../../../src/routes/category";
import Head from "next/dist/shared/lib/head";
const Categories = ({ data }) => {
  const [name, setName] = useState("");

  const categorySubmit = async (e) => {
    e.preventDefault();
    const res = await createCategories(
      "category/createcategory",
      name.toLowerCase()
    );
    if (res.err) {
      alert(res.err);
      return;
    }
  };
  const handleChange = (e) => {
    setName(e.target.value);
  };

  const deleteCategory = async (id) => {
    const deleteResponse = await deleteCategories(
      "category/deletecategory",
      id
    );
    if (deleteResponse.err) {
      alert(deleteResponse.err);
      return;
    }
    alert("Category Deleted");
  };
  const updateCategory = async (id) => {
    const newName = prompt("Updated Name");
    console.log(newName);
    const updateResponse = await updateCategories("category/updatecategory", {
      id: id,
      name: newName.toLowerCase(),
    });
    if (updateResponse.err) {
      alert(updateResponse.err);
      return;
    }
  };
  return (
    <>
      <Head>
        <title>Admin Categories Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css"
          integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p"
          crossorigin="anonymous"
        />
      </Head>
      <main className="createcategories">
        <form onSubmit={categorySubmit} action="">
          <div className="category_input">
            <input
              type="text"
              className=""
              name="category"
              value={name}
              onChange={handleChange}
              placeholder="Create Category"
            />
          </div>
          <button className="category_submit">Submit</button>
        </form>
        <div className="category_container">
          {data.map((item) => {
            return (
              <div key={item._id} className="category">
                <h2 className="name">{item.name.toUpperCase()}</h2>
                <div className="action_button">
                  <i
                    onClick={() => updateCategory(item._id)}
                    className="fas fa-edit edit_category"
                  ></i>
                  <i
                    onClick={() => deleteCategory(item._id)}
                    className="far fa-trash-alt delete_category"
                  ></i>
                </div>
              </div>
            );
          })}
        </div>
      </main>
    </>
  );
};

export default Categories;

export async function getServerSideProps() {
  const response = await getCategories("category/getcategory");
  return {
    props: { data: response.data }, // will be passed to the page component as props
  };
}
